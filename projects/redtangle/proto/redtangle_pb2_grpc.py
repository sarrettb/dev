# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto import redtangle_pb2 as proto_dot_redtangle__pb2


class RedTangleStub(object):
    """Remote API
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Connect = channel.unary_unary(
                '/redtangle.RedTangle/Connect',
                request_serializer=proto_dot_redtangle__pb2.Username.SerializeToString,
                response_deserializer=proto_dot_redtangle__pb2.ConnectionResponse.FromString,
                )
        self.GetStatus = channel.unary_unary(
                '/redtangle.RedTangle/GetStatus',
                request_serializer=proto_dot_redtangle__pb2.Username.SerializeToString,
                response_deserializer=proto_dot_redtangle__pb2.Status.FromString,
                )
        self.Select = channel.unary_unary(
                '/redtangle.RedTangle/Select',
                request_serializer=proto_dot_redtangle__pb2.SelectRequest.SerializeToString,
                response_deserializer=proto_dot_redtangle__pb2.Status.FromString,
                )
        self.Rotate = channel.unary_unary(
                '/redtangle.RedTangle/Rotate',
                request_serializer=proto_dot_redtangle__pb2.RotateRequest.SerializeToString,
                response_deserializer=proto_dot_redtangle__pb2.Status.FromString,
                )
        self.EndTurn = channel.unary_unary(
                '/redtangle.RedTangle/EndTurn',
                request_serializer=proto_dot_redtangle__pb2.Username.SerializeToString,
                response_deserializer=proto_dot_redtangle__pb2.Status.FromString,
                )
        self.Disconnect = channel.unary_unary(
                '/redtangle.RedTangle/Disconnect',
                request_serializer=proto_dot_redtangle__pb2.Username.SerializeToString,
                response_deserializer=proto_dot_redtangle__pb2.StatusCode.FromString,
                )


class RedTangleServicer(object):
    """Remote API
    """

    def Connect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Select(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Rotate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EndTurn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Disconnect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RedTangleServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Connect': grpc.unary_unary_rpc_method_handler(
                    servicer.Connect,
                    request_deserializer=proto_dot_redtangle__pb2.Username.FromString,
                    response_serializer=proto_dot_redtangle__pb2.ConnectionResponse.SerializeToString,
            ),
            'GetStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatus,
                    request_deserializer=proto_dot_redtangle__pb2.Username.FromString,
                    response_serializer=proto_dot_redtangle__pb2.Status.SerializeToString,
            ),
            'Select': grpc.unary_unary_rpc_method_handler(
                    servicer.Select,
                    request_deserializer=proto_dot_redtangle__pb2.SelectRequest.FromString,
                    response_serializer=proto_dot_redtangle__pb2.Status.SerializeToString,
            ),
            'Rotate': grpc.unary_unary_rpc_method_handler(
                    servicer.Rotate,
                    request_deserializer=proto_dot_redtangle__pb2.RotateRequest.FromString,
                    response_serializer=proto_dot_redtangle__pb2.Status.SerializeToString,
            ),
            'EndTurn': grpc.unary_unary_rpc_method_handler(
                    servicer.EndTurn,
                    request_deserializer=proto_dot_redtangle__pb2.Username.FromString,
                    response_serializer=proto_dot_redtangle__pb2.Status.SerializeToString,
            ),
            'Disconnect': grpc.unary_unary_rpc_method_handler(
                    servicer.Disconnect,
                    request_deserializer=proto_dot_redtangle__pb2.Username.FromString,
                    response_serializer=proto_dot_redtangle__pb2.StatusCode.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'redtangle.RedTangle', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RedTangle(object):
    """Remote API
    """

    @staticmethod
    def Connect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/redtangle.RedTangle/Connect',
            proto_dot_redtangle__pb2.Username.SerializeToString,
            proto_dot_redtangle__pb2.ConnectionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/redtangle.RedTangle/GetStatus',
            proto_dot_redtangle__pb2.Username.SerializeToString,
            proto_dot_redtangle__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Select(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/redtangle.RedTangle/Select',
            proto_dot_redtangle__pb2.SelectRequest.SerializeToString,
            proto_dot_redtangle__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Rotate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/redtangle.RedTangle/Rotate',
            proto_dot_redtangle__pb2.RotateRequest.SerializeToString,
            proto_dot_redtangle__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EndTurn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/redtangle.RedTangle/EndTurn',
            proto_dot_redtangle__pb2.Username.SerializeToString,
            proto_dot_redtangle__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Disconnect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/redtangle.RedTangle/Disconnect',
            proto_dot_redtangle__pb2.Username.SerializeToString,
            proto_dot_redtangle__pb2.StatusCode.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
